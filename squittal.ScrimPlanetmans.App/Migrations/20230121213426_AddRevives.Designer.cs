// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using squittal.ScrimPlanetmans.Data;

#nullable disable

namespace squittal.ScrimPlanetmans.App.Migrations
{
    [DbContext(typeof(PlanetmansDbContext))]
    [Migration("20230121213426_AddRevives")]
    partial class AddRevives
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ConstructedTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsHiddenFromSelection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConstructedTeam", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ConstructedTeamPlayerMembership", b =>
                {
                    b.Property<int>("ConstructedTeamId")
                        .HasColumnType("int");

                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactionId")
                        .HasColumnType("int");

                    b.HasKey("ConstructedTeamId", "CharacterId");

                    b.ToTable("ConstructedTeamPlayerMembership", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimDamageAssist", b =>
                {
                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("AttackerCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VictimCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<int?>("AttackerLoadoutId")
                        .HasColumnType("int");

                    b.Property<int>("AttackerTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceGainAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ExperienceGainId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ScrimMatchRound")
                        .HasColumnType("int");

                    b.Property<int?>("VictimLoadoutId")
                        .HasColumnType("int");

                    b.Property<int>("VictimTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("ScrimMatchId", "Timestamp", "AttackerCharacterId", "VictimCharacterId");

                    b.ToTable("ScrimDamageAssist", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimDeath", b =>
                {
                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("AttackerCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VictimCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<int>("AttackerFactionId")
                        .HasColumnType("int");

                    b.Property<bool>("AttackerIsOutfitless")
                        .HasColumnType("bit");

                    b.Property<int?>("AttackerLoadoutId")
                        .HasColumnType("int");

                    b.Property<string>("AttackerNameFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackerOutfitAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackerOutfitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AttackerResultingNetScore")
                        .HasColumnType("int");

                    b.Property<int?>("AttackerResultingPoints")
                        .HasColumnType("int");

                    b.Property<int>("AttackerTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int?>("AttackerVehicleId")
                        .HasColumnType("int");

                    b.Property<int>("DeathType")
                        .HasColumnType("int");

                    b.Property<bool>("IsHeadshot")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVehicleWeapon")
                        .HasColumnType("bit");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("ScrimMatchRound")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1);

                    b.Property<int>("VictimFactionId")
                        .HasColumnType("int");

                    b.Property<bool>("VictimIsOutfitless")
                        .HasColumnType("bit");

                    b.Property<int?>("VictimLoadoutId")
                        .HasColumnType("int");

                    b.Property<string>("VictimNameFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VictimOutfitAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VictimOutfitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VictimResultingNetScore")
                        .HasColumnType("int");

                    b.Property<int?>("VictimResultingPoints")
                        .HasColumnType("int");

                    b.Property<int>("VictimTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("int");

                    b.Property<int?>("WeaponItemCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("ScrimMatchId", "Timestamp", "AttackerCharacterId", "VictimCharacterId");

                    b.ToTable("ScrimDeath", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimFacilityControl", b =>
                {
                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<int>("ControllingTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<int>("ControlType")
                        .HasColumnType("int");

                    b.Property<int>("ControllingFactionId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ScrimMatchRound")
                        .HasColumnType("int");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("ScrimMatchId", "Timestamp", "FacilityId", "ControllingTeamOrdinal");

                    b.ToTable("ScrimFacilityControl", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimGrenadeAssist", b =>
                {
                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("AttackerCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VictimCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<int?>("AttackerLoadoutId")
                        .HasColumnType("int");

                    b.Property<int>("AttackerTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceGainAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ExperienceGainId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ScrimMatchRound")
                        .HasColumnType("int");

                    b.Property<int?>("VictimLoadoutId")
                        .HasColumnType("int");

                    b.Property<int>("VictimTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("ScrimMatchId", "Timestamp", "AttackerCharacterId", "VictimCharacterId");

                    b.ToTable("ScrimGrenadeAssist", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimMatch", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RulesetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1);

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RulesetId")
                        .IsUnique();

                    b.ToTable("ScrimMatch", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimMatchParticipatingPlayer", b =>
                {
                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ConstructedTeamId")
                        .HasColumnType("int");

                    b.Property<int>("FactionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFromConstructedTeam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsFromOutfit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("NameDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutfitAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutfitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrestigeLevel")
                        .HasColumnType("int");

                    b.Property<int>("TeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.HasKey("ScrimMatchId", "CharacterId");

                    b.ToTable("ScrimMatchParticipatingPlayer", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimMatchRoundConfiguration", b =>
                {
                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ScrimMatchRound")
                        .HasColumnType("int");

                    b.Property<int?>("FacilityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsManualWorldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsRoundEndedOnFacilityCapture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("RoundSecondsTotal")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.HasKey("ScrimMatchId", "ScrimMatchRound");

                    b.ToTable("ScrimMatchRoundConfiguration", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimMatchTeamPointAdjustment", b =>
                {
                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TeamOrdinal")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("AdjustmentType")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Rationale")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScrimMatchId", "TeamOrdinal", "Timestamp");

                    b.ToTable("ScrimMatchTeamPointAdjustment", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimMatchTeamResult", b =>
                {
                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("BaseCaptures")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("BaseDefenses")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Deaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("HeadshotDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Headshots")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Kills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("NetScore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ObjectiveCaptureTicks")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ObjectiveDefenseTicks")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("RevivesGiven")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("RevivesTaken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Suicides")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamkillDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Teamkills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UtilityAssistedDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UtilityAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ScrimMatchId", "TeamOrdinal");

                    b.ToTable("ScrimMatchTeamResult", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimRevive", b =>
                {
                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedicCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RevivedCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceGainAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ExperienceGainId")
                        .HasColumnType("int");

                    b.Property<int?>("MedicLoadoutId")
                        .HasColumnType("int");

                    b.Property<int>("MedicTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("RevivedLoadoutId")
                        .HasColumnType("int");

                    b.Property<int>("RevivedTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("ScrimMatchRound")
                        .HasColumnType("int");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("ScrimMatchId", "Timestamp", "MedicCharacterId", "RevivedCharacterId");

                    b.ToTable("ScrimRevive", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimSpotAssist", b =>
                {
                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpotterCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VictimCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceGainAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ExperienceGainId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ScrimMatchRound")
                        .HasColumnType("int");

                    b.Property<int?>("SpotterLoadoutId")
                        .HasColumnType("int");

                    b.Property<int>("SpotterTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int?>("VictimLoadoutId")
                        .HasColumnType("int");

                    b.Property<int>("VictimTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("ScrimMatchId", "Timestamp", "SpotterCharacterId", "VictimCharacterId");

                    b.ToTable("ScrimSpotAssist", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimVehicleDestruction", b =>
                {
                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("AttackerCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VictimCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("VictimVehicleId")
                        .HasColumnType("int");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<int>("AttackerFactionId")
                        .HasColumnType("int");

                    b.Property<bool>("AttackerIsOutfitless")
                        .HasColumnType("bit");

                    b.Property<int?>("AttackerLoadoutId")
                        .HasColumnType("int");

                    b.Property<string>("AttackerNameFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackerOutfitAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackerOutfitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AttackerResultingNetScore")
                        .HasColumnType("int");

                    b.Property<int?>("AttackerResultingPoints")
                        .HasColumnType("int");

                    b.Property<int>("AttackerTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int?>("AttackerVehicleClass")
                        .HasColumnType("int");

                    b.Property<int?>("AttackerVehicleId")
                        .HasColumnType("int");

                    b.Property<int>("DeathType")
                        .HasColumnType("int");

                    b.Property<bool?>("IsVehicleWeapon")
                        .HasColumnType("bit");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ScrimMatchRound")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1);

                    b.Property<int>("VictimFactionId")
                        .HasColumnType("int");

                    b.Property<bool>("VictimIsOutfitless")
                        .HasColumnType("bit");

                    b.Property<int?>("VictimLoadoutId")
                        .HasColumnType("int");

                    b.Property<string>("VictimNameFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VictimOutfitAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VictimOutfitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VictimResultingNetScore")
                        .HasColumnType("int");

                    b.Property<int?>("VictimResultingPoints")
                        .HasColumnType("int");

                    b.Property<int>("VictimTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int?>("VictimVehicleClass")
                        .HasColumnType("int");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("int");

                    b.Property<int?>("WeaponItemCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("ScrimMatchId", "Timestamp", "AttackerCharacterId", "VictimCharacterId", "VictimVehicleId");

                    b.ToTable("ScrimVehicleDestruction", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.Planetside.FacilityType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacilityType", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.Planetside.Faction", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CodeTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UserSelectable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Faction", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.Planetside.Item", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FactionId")
                        .HasColumnType("int");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<bool>("IsVehicleWeapon")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxStackSize")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.Planetside.ItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Domain")
                        .HasColumnType("int");

                    b.Property<bool>("IsWeaponCategory")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemCategory", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.Planetside.Loadout", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactionId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Loadout", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.Planetside.MapRegion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacilityTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeprecated")
                        .HasColumnType("bit");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id", "FacilityId");

                    b.ToTable("MapRegion", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.Planetside.Profile", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("FactionId")
                        .HasColumnType("int");

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Profile", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.Planetside.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("Cost")
                        .HasColumnType("int");

                    b.Property<int?>("CostResourceId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicle", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.Planetside.World", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("World", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.Planetside.Zone", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HexSize")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zone", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.ScrimMatchReports.ScrimMatchInfo", b =>
                {
                    b.Property<int?>("FacilityId")
                        .HasColumnType("int");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoundCount")
                        .HasColumnType("int");

                    b.Property<int>("RulesetId")
                        .HasColumnType("int");

                    b.Property<string>("RulesetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeamOneFactionId")
                        .HasColumnType("int");

                    b.Property<int>("TeamTwoFactionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.Property<string>("WorldName")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("View_ScrimMatchInfo");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.ScrimMatchReports.ScrimMatchReportInfantryDeath", b =>
                {
                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<string>("AttackerCharacterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AttackerFactionId")
                        .HasColumnType("int");

                    b.Property<int>("AttackerLoadoutId")
                        .HasColumnType("int");

                    b.Property<string>("AttackerNameDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackerNameFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AttackerTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("ConcussionGrenadeAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathType")
                        .HasColumnType("int");

                    b.Property<int>("EmpGrenadeAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("FlashGrenadeAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("GrenadeAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("IsHeadshot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsTrickleDeath")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScrimMatchRound")
                        .HasColumnType("int");

                    b.Property<int?>("SecondsFromPreviousDeathEvent")
                        .HasColumnType("int");

                    b.Property<int?>("SecondsToNextDeathEvent")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("VictimCharacterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VictimFactionId")
                        .HasColumnType("int");

                    b.Property<int>("VictimLoadoutId")
                        .HasColumnType("int");

                    b.Property<string>("VictimNameDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VictimNameFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VictimTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("WeaponId")
                        .HasColumnType("int");

                    b.Property<string>("WeaponName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.ToView("View_ScrimMatchReportInfantryDeaths");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.ScrimMatchReports.ScrimMatchReportInfantryPlayerClassEventCounts", b =>
                {
                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DamageAssistsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("EventsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("EventsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("EventsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("EventsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("EventsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("EventsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("FactionId")
                        .HasColumnType("int");

                    b.Property<int>("KillsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("NameDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrestigeLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.ToView("View_ScrimMatchReportInfantryPlayerClassEventCounts");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.ScrimMatchReports.ScrimMatchReportInfantryPlayerHeadToHeadStats", b =>
                {
                    b.Property<int>("AssistedDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("AssistedKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedOnlyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedOnlyKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsDealt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsTaken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Deaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("GrenadeAssistedDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("GrenadeAssistedKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("GrenadeAssistedOnlyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("GrenadeAssistedOnlyKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("HeadshotDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("HeadshotKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Kills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("NetScore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("OpponentCharacterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpponentFactionId")
                        .HasColumnType("int");

                    b.Property<string>("OpponentNameDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpponentNameFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpponentPrestigeLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("OpponentTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<string>("PlayerCharacterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerFactionId")
                        .HasColumnType("int");

                    b.Property<string>("PlayerNameDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerNameFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerPrestigeLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("PlayerTeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ScoredDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpotAssistedDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("SpotAssistedKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("SpotAssistedOnlyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("SpotAssistedOnlyKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UnassistedDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UnassistedHeadshotDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UnassistedHeadshotKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UnassistedKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ZeroPointDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.ToView("View_ScrimMatchReportInfantryPlayerHeadToHeadStats");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.ScrimMatchReports.ScrimMatchReportInfantryPlayerRoundStats", b =>
                {
                    b.Property<int>("AssistDamageDealt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("AssistedKills")
                        .HasColumnType("int");

                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DamageAssistedDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedEnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedOnlyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssistedOnlyEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssistedOnlyKills")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageTeamAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Deaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("FactionId")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedKills")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedOnlyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedOnlyEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedOnlyKills")
                        .HasColumnType("int");

                    b.Property<int>("HeadshotEnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("HeadshotKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillDamageDealt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Kills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("NameDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NetScore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("PrestigeLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Revived")
                        .HasColumnType("int");

                    b.Property<int>("Revives")
                        .HasColumnType("int");

                    b.Property<int>("ScoredDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScrimMatchRound")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedKills")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedOnlyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedOnlyEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedOnlyKills")
                        .HasColumnType("int");

                    b.Property<int>("Suicides")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamKillDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("TotalDamageDealt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TrickleDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UnassistedEnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.Property<int>("ZeroPointDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.ToView("View_ScrimMatchReportInfantryPlayerRoundStats");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.ScrimMatchReports.ScrimMatchReportInfantryPlayerStats", b =>
                {
                    b.Property<int>("AssistDamageDealt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("AssistedKills")
                        .HasColumnType("int");

                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DamageAssistedDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedEnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedOnlyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssistedOnlyEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssistedOnlyKills")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageTeamAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Deaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("FactionId")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedKills")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedOnlyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedOnlyEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedOnlyKills")
                        .HasColumnType("int");

                    b.Property<int>("HeadshotEnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("HeadshotKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillDamageDealt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Kills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("NameDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NetScore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("PrestigeLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Revived")
                        .HasColumnType("int");

                    b.Property<int>("Revives")
                        .HasColumnType("int");

                    b.Property<int>("ScoredDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpotAssistedDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedKills")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedOnlyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedOnlyEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedOnlyKills")
                        .HasColumnType("int");

                    b.Property<int>("Suicides")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamKillDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("TotalDamageDealt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TrickleDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UnassistedEnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.Property<int>("ZeroPointDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.ToView("View_ScrimMatchReportInfantryPlayerStats");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.ScrimMatchReports.ScrimMatchReportInfantryPlayerWeaponStats", b =>
                {
                    b.Property<int>("AssistedDeaths")
                        .HasColumnType("int");

                    b.Property<int>("AssistedEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("AssistedKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DamageAssistedDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedEnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Deaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("EnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("FactionId")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedKills")
                        .HasColumnType("int");

                    b.Property<int>("HeadshotDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("HeadshotEnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("HeadshotKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("HeadshotTeamkills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Kills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("NameDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("PrestigeLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ScoredDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ScoredKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Suicides")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("TeamkillDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Teamkills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UnassistedDeaths")
                        .HasColumnType("int");

                    b.Property<int>("UnassistedEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("UnassistedHeadshotDeaths")
                        .HasColumnType("int");

                    b.Property<int>("UnassistedHeadshotEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("UnassistedHeadshotKills")
                        .HasColumnType("int");

                    b.Property<int>("UnassistedKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("WeaponFactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(4);

                    b.Property<int>("WeaponId")
                        .HasColumnType("int");

                    b.Property<string>("WeaponName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZeroPointDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ZeroPointKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.ToView("View_ScrimMatchReportInfantryPlayerWeaponStats");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.ScrimMatchReports.ScrimMatchReportInfantryTeamRoundStats", b =>
                {
                    b.Property<int>("AssistDamageDealt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("AssistedKills")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssistedDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedEnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedOnlyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssistedOnlyEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssistedOnlyKills")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageTeamAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Deaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("FacilityCapturePoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("GrenadeAssistedDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedKills")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedOnlyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedOnlyEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedOnlyKills")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssists")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeTeamAssists")
                        .HasColumnType("int");

                    b.Property<int>("HeadshotEnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("HeadshotKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillDamageDealt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Kills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("NetScore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Revived")
                        .HasColumnType("int");

                    b.Property<int>("Revives")
                        .HasColumnType("int");

                    b.Property<int>("ScoredDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScrimMatchRound")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedKills")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedOnlyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedOnlyEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedOnlyKills")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssists")
                        .HasColumnType("int");

                    b.Property<int>("Suicides")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamKillDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("TotalDamageDealt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TrickleDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UnassistedEnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ZeroPointDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.ToView("View_ScrimMatchReportInfantryTeamRoundStats");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Models.ScrimMatchReports.ScrimMatchReportInfantryTeamStats", b =>
                {
                    b.Property<int>("AssistDamageDealt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("AssistedKills")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssistedDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedEnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistedOnlyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssistedOnlyEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssistedOnlyKills")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageAssistsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DamageTeamAssists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Deaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DeathsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("FacilityCapturePoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("GrenadeAssistedDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedKills")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedOnlyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedOnlyEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssistedOnlyKills")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeAssists")
                        .HasColumnType("int");

                    b.Property<int>("GrenadeTeamAssists")
                        .HasColumnType("int");

                    b.Property<int>("HeadshotEnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("HeadshotKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillDamageDealt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Kills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsEngineer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsHeavyAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsInfiltrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsLightAssault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("KillsAsMedic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("NetScore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("PointAdjustments")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Revived")
                        .HasColumnType("int");

                    b.Property<int>("Revives")
                        .HasColumnType("int");

                    b.Property<int>("ScoredDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ScrimMatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpotAssistedDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedKills")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedOnlyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedOnlyEnemyDeaths")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssistedOnlyKills")
                        .HasColumnType("int");

                    b.Property<int>("SpotAssists")
                        .HasColumnType("int");

                    b.Property<int>("Suicides")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamKillDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamKills")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamOrdinal")
                        .HasColumnType("int");

                    b.Property<int>("TotalDamageDealt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TrickleDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UnassistedEnemyDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ZeroPointDeaths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.ToView("View_ScrimMatchReportInfantryTeamStats");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.DeathType", b =>
                {
                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Type");

                    b.ToTable("DeathType", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.Ruleset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLastModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DefaultEndRoundOnFacilityCapture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("DefaultMatchTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DefaultRoundLength")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(900);

                    b.Property<bool>("IsCustomDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceFile")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.ToTable("Ruleset", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.RulesetActionRule", b =>
                {
                    b.Property<int>("RulesetId")
                        .HasColumnType("int");

                    b.Property<int>("ScrimActionType")
                        .HasColumnType("int");

                    b.Property<bool>("DeferToItemCategoryRules")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ScrimActionTypeDomain")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1);

                    b.HasKey("RulesetId", "ScrimActionType");

                    b.ToTable("RulesetActionRule", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.RulesetFacilityRule", b =>
                {
                    b.Property<int>("RulesetId")
                        .HasColumnType("int");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<int>("MapRegionId")
                        .HasColumnType("int");

                    b.HasKey("RulesetId", "FacilityId");

                    b.HasIndex("MapRegionId", "FacilityId")
                        .IsUnique();

                    b.ToTable("RulesetFacilityRule", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.RulesetItemCategoryRule", b =>
                {
                    b.Property<int>("RulesetId")
                        .HasColumnType("int");

                    b.Property<int>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("DeferToItemRules")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("DeferToPlanetsideClassSettings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("EngineerIsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("EngineerPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("HeavyAssaultIsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("HeavyAssaultPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("InfiltratorIsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("InfiltratorPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("LightAssaultIsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("LightAssaultPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("MaxIsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("MaxPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("MedicIsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("MedicPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("RulesetId", "ItemCategoryId");

                    b.HasIndex("ItemCategoryId")
                        .IsUnique();

                    b.ToTable("RulesetItemCategoryRule", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.RulesetItemRule", b =>
                {
                    b.Property<int>("RulesetId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<bool>("DeferToPlanetsideClassSettings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("EngineerIsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("EngineerPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("HeavyAssaultIsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("HeavyAssaultPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("InfiltratorIsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("InfiltratorPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("LightAssaultIsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("LightAssaultPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("MaxIsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("MaxPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("MedicIsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("MedicPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("RulesetId", "ItemId");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("RulesetItemRule", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.RulesetOverlayConfiguration", b =>
                {
                    b.Property<int>("RulesetId")
                        .HasColumnType("int");

                    b.Property<bool?>("ShowStatusPanelScores")
                        .HasColumnType("bit");

                    b.Property<int>("StatsDisplayType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<bool>("UseCompactLayout")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("RulesetId");

                    b.ToTable("RulesetOverlayConfiguration", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.ScrimAction", b =>
                {
                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Domain")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Action");

                    b.ToTable("ScrimAction", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.VehicleClass", b =>
                {
                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Class");

                    b.ToTable("VehicleClass", (string)null);
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ConstructedTeamPlayerMembership", b =>
                {
                    b.HasOne("squittal.ScrimPlanetmans.Data.Models.ConstructedTeam", "ConstructedTeam")
                        .WithMany("PlayerMemberships")
                        .HasForeignKey("ConstructedTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConstructedTeam");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimMatch", b =>
                {
                    b.HasOne("squittal.ScrimPlanetmans.ScrimMatch.Models.Ruleset", "Ruleset")
                        .WithOne()
                        .HasForeignKey("squittal.ScrimPlanetmans.Data.Models.ScrimMatch", "RulesetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ruleset");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimMatchTeamPointAdjustment", b =>
                {
                    b.HasOne("squittal.ScrimPlanetmans.Data.Models.ScrimMatchTeamResult", "ScrimMatchTeamResult")
                        .WithMany("PointAdjustments")
                        .HasForeignKey("ScrimMatchId", "TeamOrdinal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScrimMatchTeamResult");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.RulesetActionRule", b =>
                {
                    b.HasOne("squittal.ScrimPlanetmans.ScrimMatch.Models.Ruleset", "Ruleset")
                        .WithMany("RulesetActionRules")
                        .HasForeignKey("RulesetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ruleset");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.RulesetFacilityRule", b =>
                {
                    b.HasOne("squittal.ScrimPlanetmans.ScrimMatch.Models.Ruleset", "Ruleset")
                        .WithMany("RulesetFacilityRules")
                        .HasForeignKey("RulesetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("squittal.ScrimPlanetmans.Models.Planetside.MapRegion", "MapRegion")
                        .WithOne()
                        .HasForeignKey("squittal.ScrimPlanetmans.ScrimMatch.Models.RulesetFacilityRule", "MapRegionId", "FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MapRegion");

                    b.Navigation("Ruleset");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.RulesetItemCategoryRule", b =>
                {
                    b.HasOne("squittal.ScrimPlanetmans.Models.Planetside.ItemCategory", "ItemCategory")
                        .WithOne()
                        .HasForeignKey("squittal.ScrimPlanetmans.ScrimMatch.Models.RulesetItemCategoryRule", "ItemCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("squittal.ScrimPlanetmans.ScrimMatch.Models.Ruleset", "Ruleset")
                        .WithMany("RulesetItemCategoryRules")
                        .HasForeignKey("RulesetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemCategory");

                    b.Navigation("Ruleset");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.RulesetItemRule", b =>
                {
                    b.HasOne("squittal.ScrimPlanetmans.Models.Planetside.Item", "Item")
                        .WithOne()
                        .HasForeignKey("squittal.ScrimPlanetmans.ScrimMatch.Models.RulesetItemRule", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("squittal.ScrimPlanetmans.ScrimMatch.Models.Ruleset", "Ruleset")
                        .WithMany("RulesetItemRules")
                        .HasForeignKey("RulesetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Ruleset");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.RulesetOverlayConfiguration", b =>
                {
                    b.HasOne("squittal.ScrimPlanetmans.ScrimMatch.Models.Ruleset", "Ruleset")
                        .WithOne("RulesetOverlayConfiguration")
                        .HasForeignKey("squittal.ScrimPlanetmans.ScrimMatch.Models.RulesetOverlayConfiguration", "RulesetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ruleset");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ConstructedTeam", b =>
                {
                    b.Navigation("PlayerMemberships");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.Data.Models.ScrimMatchTeamResult", b =>
                {
                    b.Navigation("PointAdjustments");
                });

            modelBuilder.Entity("squittal.ScrimPlanetmans.ScrimMatch.Models.Ruleset", b =>
                {
                    b.Navigation("RulesetActionRules");

                    b.Navigation("RulesetFacilityRules");

                    b.Navigation("RulesetItemCategoryRules");

                    b.Navigation("RulesetItemRules");

                    b.Navigation("RulesetOverlayConfiguration");
                });
#pragma warning restore 612, 618
        }
    }
}
